m = [
    [2,2,4,6],
    [1,1,7,6],
    [2,1,3,6]
]    
def matrix_rank(matrix):
    if not matrix:
        return 0
    
    rows, cols = len(matrix), len(matrix[0])
    
    # Копируем матрицу, чтобы не изменять оригинал
    m = [row[:] for row in matrix]
    
    rank = 0
    for col in range(cols):
        # Находим строку с ненулевым элементом в текущем столбце
        pivot_row = None
        for r in range(rank, rows):
            if m[r][col] != 0:
                pivot_row = r
                break
        
        if pivot_row is not None:
            # Меняем местами текущую строку с pivot_row
            m[rank], m[pivot_row] = m[pivot_row], m[rank]
            
            # Нормализуем pivot элемент
            pivot = m[rank][col]
            for c in range(col, cols):
                m[rank][c] /= pivot
            
            # Вычитаем текущую строку из всех нижележащих строк
            for r in range(rank + 1, rows):
                factor = m[r][col]
                for c in range(col, cols):
                    m[r][c] -= factor * m[rank][c]
            
            rank += 1
    
    return rank